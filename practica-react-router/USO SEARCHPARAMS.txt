Â¿QuÃ© es useSearchParams?
Es un hook de React Router (react-router-dom) que te permite:

Leer parÃ¡metros de bÃºsqueda (search params) en la URL.

Actualizar esos parÃ¡metros sin recargar la pÃ¡gina.

Por ejemplo:
Si estÃ¡s en /usuarios?orden=desc, podÃ©s leer ese orden=desc.

âœ… Ejemplo simple
Supongamos una pÃ¡gina de Usuarios con orden ascendente o descendente:

/pages/Usuarios.jsx

import { useSearchParams } from "react-router-dom";

const Usuarios = () => {
  const [searchParams, setSearchParams] = useSearchParams();

  const orden = searchParams.get("orden") || "asc";

  const handleOrdenToggle = () => {
    const nuevoOrden = orden === "asc" ? "desc" : "asc";
    setSearchParams({ orden: nuevoOrden });
  };

  return (
    <div>
      <h2>Lista de usuarios (orden: {orden})</h2>
      <button onClick={handleOrdenToggle}>
        Cambiar a {orden === "asc" ? "descendente" : "ascendente"}
      </button>
    </div>
  );
};

export default Usuarios;

âœ… Â¿QuÃ© hace este ejemplo?
Lee el valor de orden desde la URL (?orden=asc o ?orden=desc).

Usa un botÃ³n para cambiar ese valor (actualiza la URL sin recargar).

Si no hay orden, asume asc por defecto.

ğŸ§  Tips extra
PodÃ©s pasar mÃºltiples parÃ¡metros: setSearchParams({ orden: 'asc', filtro: 'activo' })

TambiÃ©n podÃ©s usar searchParams.has('orden'), searchParams.delete(), etc.

