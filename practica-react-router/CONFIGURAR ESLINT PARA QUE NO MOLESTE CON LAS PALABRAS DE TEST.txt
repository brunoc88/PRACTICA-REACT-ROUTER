Perfecto, con ese archivo ESLint en formato JS (importando plugins y globals) lo que hay que hacer es:

1. Instalar el plugin de Vitest para ESLint:

npm install -D eslint-plugin-vitest

2. Modificar la configuración para que reconozca los globals de Vitest agregando el plugin y el entorno para vitest:

import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'

export default [
  { ignores: ['dist'] },
  {
    files: ['**/*.{js,jsx}'],
    languageOptions: {
      ecmaVersion: 2020,
      globals: {
        ...globals.browser,
        ...globals.es2021,
        ...globals.node,
        ...globals['vitest/globals'],  // <-- agregamos los globals de vitest acá
      },
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    plugins: {
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
      'vitest': require('eslint-plugin-vitest'), // importamos plugin vitest
    },
    rules: {
      ...js.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
      'react-refresh/only-export-components': [
        'warn',
        { allowConstantExport: true },
      ],
      // Podés agregar reglas específicas para vitest si querés
      'vitest/no-focused-tests': 'warn',
      'vitest/no-disabled-tests': 'warn',
    },
  },
]

Así ESLint reconocerá test, expect, describe, etc., sin que te los subraye.